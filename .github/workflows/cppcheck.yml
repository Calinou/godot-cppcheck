name: Run cppcheck and deploy to GitHub Pages
on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    # Every week on Monday at midnight (UTC).
    # This keeps the generated Cppcheck reports fresh.
    - cron: '0 0 * * 1'

jobs:
  cppcheck:
    name: Run cppcheck and deploy to GitHub Pages
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Required to switch to the `gh-pages` branch during the job.
          fetch-depth: 0

      - name: Run cppcheck
        run: |
          sudo apt-get update -qq
          # Pygments is required by cppcheck-htmlreport.
          sudo apt-get install -qqq build-essential cmake ninja-build python-pygments

          curl -L https://github.com/danmar/cppcheck/archive/2.7.tar.gz -o /tmp/cppcheck.tar.gz
          tar xf /tmp/cppcheck.tar.gz --strip-components=1 --one-top-level=/tmp/cppcheck/
          pushd /tmp/cppcheck/
          cmake -G Ninja -DUSE_MATCHCOMPILER=ON -DCMAKE_BUILD_TYPE=Release -B build
          cmake --build build
          sudo cmake --build build --target install
          sudo cp htmlreport/cppcheck-htmlreport /usr/local/bin/cppcheck-htmlreport
          popd

          BASEDIR="$PWD"

          # We'll need those files later, but they will no longer exist once we switch branches.
          cp -r "$BASEDIR/"{includes,thirdparty}/ /tmp

          # Switch branches to copy old XML reports for deployment (we need this to keep a history across commits).
          git switch gh-pages
          mkdir -p "$BASEDIR/.github/dist/"
          cp -r "$BASEDIR/xml/" "$BASEDIR/.github/dist/"
          git switch -

          # Use absolute paths so that we can `cd` without having to go back to the parent directory manually.
          for branch in "master" "3.x"; do
            echo ""
            echo "================================================================"
            echo "Running Cppcheck on branch $branch..."
            echo "================================================================"

            git clone --depth=1 https://github.com/godotengine/godot.git --branch="$branch" "/tmp/godot-$branch/"
            cd "/tmp/godot-$branch/"

            mkdir -p "$BASEDIR/.github/dist/$branch/"

            hash="$(git rev-parse HEAD)"
            date="$(git log -1 --format=%cd --date=short)"

            # Remove previous HTML report files (but keep previous XML files),
            # as we switched to the `gh-pages` branch at this point.
            # rm -rf "$BASEDIR/.github/dist/$branch/"

            mkdir -p "$BASEDIR/.github/dist/$branch/" "$BASEDIR/.github/dist/xml/$branch/"

            # Supress frequent false positives. Godot also doesn't use STL containers,
            # so `useStlAlgorithm` emits false positives.
            cppcheck \
                -ithirdparty -i3rdparty -itests -itest -itoolchain -itools \
                --std=c++17 \
                --suppress=useStlAlgorithm \
                --suppress=unknownMacro \
                --suppress=unusedFunction \
                --suppress=nullPointerRedundantCheck \
                --enable=all \
                --force \
                --output-file="$BASEDIR/.github/dist/xml/$branch/cppcheck_${date}_${hash}.xml" \
                --xml \
                --xml-version=2 \
                .

            tree -sh "$BASEDIR/.github/dist/"

            cppcheck-htmlreport \
                --source-dir=. \
                --title="Godot - branch: $branch, commit: $hash ($date)" \
                --file="$BASEDIR/.github/dist/xml/$branch/cppcheck_${date}_${hash}.xml" \
                --report-dir="$BASEDIR/.github/dist/$branch"

            # Append the branch to the list of branches for the website.
            echo "<li><a href=\"$branch/\"><code>$branch</code></a> (generated from commit <a href=\"https://github.com/godotengine/godot/commit/$hash\"><code>$hash</code></a>)</li>" >> "/tmp/includes/branches.html"
          done

          cat "/tmp/includes/header.html" "/tmp/includes/branches.html" "/tmp/includes/footer.html" > "$BASEDIR/.github/dist/index.html"
          cp -r /tmp/thirdparty "$BASEDIR/.github/dist/"
          touch "$BASEDIR/.github/dist/.nojekyll"

      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v3
        # Only deploy from the `main` branch, and never deploy from pull requests.
        if: ${{ (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main' }}
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # The branch the action should deploy to.
          BRANCH: gh-pages
          # The folder the action should deploy.
          FOLDER: .github/dist
          # Artifacts are large; don't keep the branch's history.
          SINGLE_COMMIT: true
